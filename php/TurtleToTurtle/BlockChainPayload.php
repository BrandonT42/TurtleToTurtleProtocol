<?php
// Copyright (c) 2018, The TurtleCoin Developers
// 
// Please see the included LICENSE file for more information.


# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TurtleToTurtle.proto

namespace TurtleToTurtle;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>TurtleToTurtle.BlockChainPayload</code>
 */
class BlockChainPayload extends \Google\Protobuf\Internal\Message
{
    protected $data;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \TurtleToTurtle\TurtleCoin\TurtleBlock $block
     *     @type \TurtleToTurtle\TurtleCoin\TurtleTransaction $transaction
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\TurtleToTurtle::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.TurtleCoin.TurtleBlock block = 1;</code>
     * @return \TurtleToTurtle\TurtleCoin\TurtleBlock
     */
    public function getBlock()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.TurtleCoin.TurtleBlock block = 1;</code>
     * @param \TurtleToTurtle\TurtleCoin\TurtleBlock $var
     * @return $this
     */
    public function setBlock($var)
    {
        GPBUtil::checkMessage($var, \TurtleToTurtle\TurtleCoin\TurtleBlock::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.TurtleCoin.TurtleTransaction transaction = 2;</code>
     * @return \TurtleToTurtle\TurtleCoin\TurtleTransaction
     */
    public function getTransaction()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.TurtleCoin.TurtleTransaction transaction = 2;</code>
     * @param \TurtleToTurtle\TurtleCoin\TurtleTransaction $var
     * @return $this
     */
    public function setTransaction($var)
    {
        GPBUtil::checkMessage($var, \TurtleToTurtle\TurtleCoin\TurtleTransaction::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getData()
    {
        return $this->whichOneof("data");
    }

}

