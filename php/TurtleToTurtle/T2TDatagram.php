<?php
// Copyright (c) 2018, The TurtleCoin Developers
//
// Please see the included LICENSE file for more information.


# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TurtleToTurtle.proto

namespace TurtleToTurtle;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>TurtleToTurtle.T2TDatagram</code>
 */
class T2TDatagram extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 p2pNetworkId = 1;</code>
     */
    private $p2pNetworkId = 0;
    /**
     * Generated from protobuf field <code>uint32 version = 2;</code>
     */
    private $version = 0;
    /**
     * Generated from protobuf field <code>string peerId = 3;</code>
     */
    private $peerId = '';
    /**
     * Generated from protobuf field <code>string agent = 4;</code>
     */
    private $agent = '';
    /**
     * Generated from protobuf field <code>string nodeVersion = 5;</code>
     */
    private $nodeVersion = '';
    protected $dataPayload;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $p2pNetworkId
     *     @type int $version
     *     @type string $peerId
     *     @type string $agent
     *     @type string $nodeVersion
     *     @type \TurtleToTurtle\T2TCandidateList $t2tCandidateList
     *     @type \TurtleToTurtle\T2TCandidateListRequest $t2tCandidateListRequest
     *     @type \TurtleToTurtle\BlockChainPayload $blockChainPayload
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\TurtleToTurtle::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint32 p2pNetworkId = 1;</code>
     * @return int
     */
    public function getP2PNetworkId()
    {
        return $this->p2pNetworkId;
    }

    /**
     * Generated from protobuf field <code>uint32 p2pNetworkId = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setP2PNetworkId($var)
    {
        GPBUtil::checkUint32($var);
        $this->p2pNetworkId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 version = 2;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * Generated from protobuf field <code>uint32 version = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkUint32($var);
        $this->version = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string peerId = 3;</code>
     * @return string
     */
    public function getPeerId()
    {
        return $this->peerId;
    }

    /**
     * Generated from protobuf field <code>string peerId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPeerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->peerId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string agent = 4;</code>
     * @return string
     */
    public function getAgent()
    {
        return $this->agent;
    }

    /**
     * Generated from protobuf field <code>string agent = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAgent($var)
    {
        GPBUtil::checkString($var, True);
        $this->agent = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string nodeVersion = 5;</code>
     * @return string
     */
    public function getNodeVersion()
    {
        return $this->nodeVersion;
    }

    /**
     * Generated from protobuf field <code>string nodeVersion = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setNodeVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->nodeVersion = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.T2TCandidateList t2tCandidateList = 6;</code>
     * @return \TurtleToTurtle\T2TCandidateList
     */
    public function getT2TCandidateList()
    {
        return $this->readOneof(6);
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.T2TCandidateList t2tCandidateList = 6;</code>
     * @param \TurtleToTurtle\T2TCandidateList $var
     * @return $this
     */
    public function setT2TCandidateList($var)
    {
        GPBUtil::checkMessage($var, \TurtleToTurtle\T2TCandidateList::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.T2TCandidateListRequest t2tCandidateListRequest = 7;</code>
     * @return \TurtleToTurtle\T2TCandidateListRequest
     */
    public function getT2TCandidateListRequest()
    {
        return $this->readOneof(7);
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.T2TCandidateListRequest t2tCandidateListRequest = 7;</code>
     * @param \TurtleToTurtle\T2TCandidateListRequest $var
     * @return $this
     */
    public function setT2TCandidateListRequest($var)
    {
        GPBUtil::checkMessage($var, \TurtleToTurtle\T2TCandidateListRequest::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.BlockChainPayload blockChainPayload = 8;</code>
     * @return \TurtleToTurtle\BlockChainPayload
     */
    public function getBlockChainPayload()
    {
        return $this->readOneof(8);
    }

    /**
     * Generated from protobuf field <code>.TurtleToTurtle.BlockChainPayload blockChainPayload = 8;</code>
     * @param \TurtleToTurtle\BlockChainPayload $var
     * @return $this
     */
    public function setBlockChainPayload($var)
    {
        GPBUtil::checkMessage($var, \TurtleToTurtle\BlockChainPayload::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getDataPayload()
    {
        return $this->whichOneof("dataPayload");
    }

}

