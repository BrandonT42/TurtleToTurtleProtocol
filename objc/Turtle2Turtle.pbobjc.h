// Copyright (c) 2018, The TurtleCoin Developers
// 
// Please see the included LICENSE file for more information.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Turtle2Turtle.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BlockChainPayload;
@class T2TCandidate;
@class T2TCandidateList;
@class T2TCandidateListRequest;
@class T2TNodeCapability;
@class TurtleBlock;
@class TurtleTransaction;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Turtle2TurtleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface Turtle2TurtleRoot : GPBRootObject
@end

#pragma mark - T2TDatagram

typedef GPB_ENUM(T2TDatagram_FieldNumber) {
  T2TDatagram_FieldNumber_P2PNetworkId = 1,
  T2TDatagram_FieldNumber_Version = 2,
  T2TDatagram_FieldNumber_PeerId = 3,
  T2TDatagram_FieldNumber_T2TCandidateList = 4,
  T2TDatagram_FieldNumber_T2TCandidateListRequest = 5,
  T2TDatagram_FieldNumber_BlockChainPayload = 6,
};

typedef GPB_ENUM(T2TDatagram_DataPayload_OneOfCase) {
  T2TDatagram_DataPayload_OneOfCase_GPBUnsetOneOfCase = 0,
  T2TDatagram_DataPayload_OneOfCase_T2TCandidateList = 4,
  T2TDatagram_DataPayload_OneOfCase_T2TCandidateListRequest = 5,
  T2TDatagram_DataPayload_OneOfCase_BlockChainPayload = 6,
};

@interface T2TDatagram : GPBMessage

@property(nonatomic, readwrite) uint32_t p2PNetworkId;

@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite, copy, null_resettable) NSString *peerId;

@property(nonatomic, readonly) T2TDatagram_DataPayload_OneOfCase dataPayloadOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) T2TCandidateList *t2TCandidateList;

@property(nonatomic, readwrite, strong, null_resettable) T2TCandidateListRequest *t2TCandidateListRequest;

@property(nonatomic, readwrite, strong, null_resettable) BlockChainPayload *blockChainPayload;

@end

/**
 * Clears whatever value was set for the oneof 'dataPayload'.
 **/
void T2TDatagram_ClearDataPayloadOneOfCase(T2TDatagram *message);

#pragma mark - T2TCandidateList

typedef GPB_ENUM(T2TCandidateList_FieldNumber) {
  T2TCandidateList_FieldNumber_CandidateArray = 1,
};

@interface T2TCandidateList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<T2TCandidate*> *candidateArray;
/** The number of items in @c candidateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger candidateArray_Count;

@end

#pragma mark - T2TCandidateListRequest

typedef GPB_ENUM(T2TCandidateListRequest_FieldNumber) {
  T2TCandidateListRequest_FieldNumber_BlockChainIdArray = 1,
};

@interface T2TCandidateListRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *blockChainIdArray;
/** The number of items in @c blockChainIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blockChainIdArray_Count;

@end

#pragma mark - T2TCandidate

typedef GPB_ENUM(T2TCandidate_FieldNumber) {
  T2TCandidate_FieldNumber_PeerId = 1,
  T2TCandidate_FieldNumber_Version = 2,
  T2TCandidate_FieldNumber_IpV4Address = 3,
  T2TCandidate_FieldNumber_IpV6Address = 4,
  T2TCandidate_FieldNumber_Port = 5,
  T2TCandidate_FieldNumber_Ttl = 6,
  T2TCandidate_FieldNumber_Capability = 7,
};

@interface T2TCandidate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *peerId;

@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite) uint32_t ipV4Address;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ipV6Address;

@property(nonatomic, readwrite) uint32_t port;

@property(nonatomic, readwrite) uint32_t ttl;

@property(nonatomic, readwrite, strong, null_resettable) T2TNodeCapability *capability;
/** Test to see if @c capability has been set. */
@property(nonatomic, readwrite) BOOL hasCapability;

@end

#pragma mark - T2TNodeCapability

typedef GPB_ENUM(T2TNodeCapability_FieldNumber) {
  T2TNodeCapability_FieldNumber_Archival = 1,
  T2TNodeCapability_FieldNumber_BlockChainIdArray = 2,
};

@interface T2TNodeCapability : GPBMessage

@property(nonatomic, readwrite) BOOL archival;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *blockChainIdArray;
/** The number of items in @c blockChainIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blockChainIdArray_Count;

@end

#pragma mark - BlockChainPayload

typedef GPB_ENUM(BlockChainPayload_FieldNumber) {
  BlockChainPayload_FieldNumber_Block = 1,
  BlockChainPayload_FieldNumber_Transaction = 2,
};

typedef GPB_ENUM(BlockChainPayload_Data_OneOfCase) {
  BlockChainPayload_Data_OneOfCase_GPBUnsetOneOfCase = 0,
  BlockChainPayload_Data_OneOfCase_Block = 1,
  BlockChainPayload_Data_OneOfCase_Transaction = 2,
};

@interface BlockChainPayload : GPBMessage

@property(nonatomic, readonly) BlockChainPayload_Data_OneOfCase dataOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) TurtleBlock *block;

@property(nonatomic, readwrite, strong, null_resettable) TurtleTransaction *transaction;

@end

/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void BlockChainPayload_ClearDataOneOfCase(BlockChainPayload *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
